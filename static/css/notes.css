/* static/css/notes.css */

/* Container for the date details view */
.details-container {
    margin-top: 30px;
    padding: 20px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    background-color: var(--subtle-bg);
    min-height: 150px;
    /* Base state and transition for fade-in (May move to animations?) */
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
    /* position: relative; Moved to animations.css */
}

/* Notes editor form - Make it a positioning context for the drawer */
.notes-editor-form {
    position: relative;
}

/* Notes editor textarea */
textarea[name="notes"] {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    font-family: inherit;
    font-size: 1em;
    line-height: 1.6;
    margin-bottom: 15px;
    box-sizing: border-box;
    background-color: #fff;
}

/* Disabled state for notes textarea */
textarea:disabled {
    background-color: var(--disabled-bg);
    color: #999;
}

/* Area where save feedback appears */
#notes-save-feedback-area {
    height: 50px; /* Pre-allocate height to prevent layout shifts */
    /* Add other styles like margin/padding if needed */
}

/* NEW: Read-Only Notes View Styling */
.notes-readonly-view {
    padding: 15px;
    border: 1px dashed var(--border-color); /* Dashed border to hint interactivity */
    border-radius: 4px;
    background-color: #fff; /* Or potentially var(--subtle-bg) ? */
    margin-bottom: 15px; /* Space below */
    min-height: 250px; /* Match editor height roughly */
    transition: background-color 0.2s ease; /* For hover effect */
}

.notes-readonly-view:hover {
    background-color: var(--subtle-bg); /* Light background on hover */
    cursor: pointer; /* Indicate clickable */
    border-color: var(--primary-color); /* Highlight border on hover */
}

/* Ensure markdown content inside looks okay */
.notes-readonly-view > div > :first-child {
    margin-top: 0; /* Remove potential top margin from first rendered element */
}
.notes-readonly-view > div > :last-child {
    margin-bottom: 0; /* Remove potential bottom margin from last rendered element */
}